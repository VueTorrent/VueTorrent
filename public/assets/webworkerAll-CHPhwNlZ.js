import{E as w,U as Ft,T as Pe,a as Ye,a2 as k,a3 as R,D as E,$ as D,ac as H,ad as Fe,ae as Be,af as ee,ag as xe,w as K,s as M,M as U,Z as N,O as te,ah as Bt,ai as G,k as Y,c as Xe,H as A,a5 as _e,R as be,F as je,b as $,B as W,n as ke,y as re,aj as kt,ak as ye,K as ge,al as Q,q as we,t as Mt,G as Rt,l as $e,p as Ne,a7 as Ke,aa as qe,m as Ut,o as Gt,a8 as At,a9 as Wt,ab as zt,am as Dt,an as Lt,e as C,ao as It}from"./TorrentDetail-B6dZQJKG.js";import{S as ie,c as ae,a as Ot,b as Et,B as Qe}from"./colorToUniform-DmtBy-2V.js";import{C as X}from"./CanvasPool-DmMQB66F.js";import"./vue-xUNsYc5W.js";import"./ColoredChip.vue_vue_type_script_setup_true_lang-BW3rnpdy.js";import"./index-BWESGsC6.js";import"./vuetify-DaLMkH_Z.js";import"./VForm-Db6e6p_8.js";import"./index-BftSu9rT.js";import"./VSheet-CP2_2dcW.js";import"./VEmptyState-CWWVvp1o.js";import"./VDataTable-C7BIFrxY.js";import"./VPagination-o5SawQmZ.js";import"./VTabs-Cndix3dR.js";class Je{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:s}=this._resizeTo;t=i,r=s}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Je.extension=w.Application;class Ze{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,Ft.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Pe.shared:new Pe,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}Ze.extension=w.Application;class Ht extends Ye{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return k(R,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return k(R,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return k(R,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return k(R,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return k(R,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){this.emit("destroy",this),this.removeAllListeners();for(const t in this.chars)this.chars[t].texture?.destroy();this.chars=null,e&&(this.pages.forEach(t=>t.texture.destroy(!0)),this.pages=null)}}const Vt=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function se(a){const e=typeof a.fontSize=="number"?`${a.fontSize}px`:a.fontSize;let t=a.fontFamily;Array.isArray(a.fontFamily)||(t=a.fontFamily.split(","));for(let r=t.length-1;r>=0;r--){let i=t[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&!Vt.includes(i)&&(i=`"${i}"`),t[r]=i}return`${a.fontStyle} ${a.fontVariant} ${a.fontWeight} ${e} ${t.join(",")}`}const le={willReadFrequently:!0},L=class m{static get experimentalLetterSpacingSupported(){let e=m._experimentalLetterSpacingSupported;if(e===void 0){const t=E.get().getCanvasRenderingContext2D().prototype;e=m._experimentalLetterSpacingSupported="letterSpacing"in t||"textLetterSpacing"in t}return e}constructor(e,t,r,i,s,n,o,l,c){this.text=e,this.style=t,this.width=r,this.height=i,this.lines=s,this.lineWidths=n,this.lineHeight=o,this.maxLineWidth=l,this.fontProperties=c}static measureText(e=" ",t,r=m._canvas,i=t.wordWrap){const s=se(t),n=m.measureFont(s);n.fontSize===0&&(n.fontSize=t.fontSize,n.ascent=t.fontSize);const o=m.__context;o.font=s;const c=(i?m._wordWrap(e,t,r):e).split(/(?:\r\n|\r|\n)/),u=new Array(c.length);let d=0;for(let p=0;p<c.length;p++){const b=m._measureText(c[p],t.letterSpacing,o);u[p]=b,d=Math.max(d,b)}const h=t._stroke?.width||0;let f=d+h;t.dropShadow&&(f+=t.dropShadow.distance);const x=t.lineHeight||n.fontSize;let _=Math.max(x,n.fontSize+h)+(c.length-1)*(x+t.leading);return t.dropShadow&&(_+=t.dropShadow.distance),new m(e,t,f,_,c,u,x+t.leading,d,n)}static _measureText(e,t,r){let i=!1;m.experimentalLetterSpacingSupported&&(m.experimentalLetterSpacing?(r.letterSpacing=`${t}px`,r.textLetterSpacing=`${t}px`,i=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const s=r.measureText(e);let n=s.width;const o=-s.actualBoundingBoxLeft;let c=s.actualBoundingBoxRight-o;if(n>0)if(i)n-=t,c-=t;else{const u=(m.graphemeSegmenter(e).length-1)*t;n+=u,c+=u}return Math.max(n,c)}static _wordWrap(e,t,r=m._canvas){const i=r.getContext("2d",le);let s=0,n="",o="";const l=Object.create(null),{letterSpacing:c,whiteSpace:u}=t,d=m._collapseSpaces(u),h=m._collapseNewlines(u);let f=!d;const x=t.wordWrapWidth+c,_=m._tokenize(e);for(let g=0;g<_.length;g++){let p=_[g];if(m._isNewline(p)){if(!h){o+=m._addLine(n),f=!d,n="",s=0;continue}p=" "}if(d){const y=m.isBreakingSpace(p),T=m.isBreakingSpace(n[n.length-1]);if(y&&T)continue}const b=m._getFromCache(p,c,l,i);if(b>x)if(n!==""&&(o+=m._addLine(n),n="",s=0),m.canBreakWords(p,t.breakWords)){const y=m.wordWrapSplit(p);for(let T=0;T<y.length;T++){let v=y[T],F=v,P=1;for(;y[T+P];){const S=y[T+P];if(!m.canBreakChars(F,S,p,T,t.breakWords))v+=S;else break;F=S,P++}T+=P-1;const B=m._getFromCache(v,c,l,i);B+s>x&&(o+=m._addLine(n),f=!1,n="",s=0),n+=v,s+=B}}else{n.length>0&&(o+=m._addLine(n),n="",s=0);const y=g===_.length-1;o+=m._addLine(p,!y),f=!1,n="",s=0}else b+s>x&&(f=!1,o+=m._addLine(n),n="",s=0),(n.length>0||!m.isBreakingSpace(p)||f)&&(n+=p,s+=b)}return o+=m._addLine(n,!1),o}static _addLine(e,t=!0){return e=m._trimRight(e),e=t?`${e}
`:e,e}static _getFromCache(e,t,r,i){let s=r[e];return typeof s!="number"&&(s=m._measureText(e,t,i)+t,r[e]=s),s}static _collapseSpaces(e){return e==="normal"||e==="pre-line"}static _collapseNewlines(e){return e==="normal"}static _trimRight(e){if(typeof e!="string")return"";for(let t=e.length-1;t>=0;t--){const r=e[t];if(!m.isBreakingSpace(r))break;e=e.slice(0,-1)}return e}static _isNewline(e){return typeof e!="string"?!1:m._newlines.includes(e.charCodeAt(0))}static isBreakingSpace(e,t){return typeof e!="string"?!1:m._breakingSpaces.includes(e.charCodeAt(0))}static _tokenize(e){const t=[];let r="";if(typeof e!="string")return t;for(let i=0;i<e.length;i++){const s=e[i],n=e[i+1];if(m.isBreakingSpace(s,n)||m._isNewline(s)){r!==""&&(t.push(r),r=""),s==="\r"&&n===`
`?(t.push(`\r
`),i++):t.push(s);continue}r+=s}return r!==""&&t.push(r),t}static canBreakWords(e,t){return t}static canBreakChars(e,t,r,i,s){return!0}static wordWrapSplit(e){return m.graphemeSegmenter(e)}static measureFont(e){if(m._fonts[e])return m._fonts[e];const t=m._context;t.font=e;const r=t.measureText(m.METRICS_STRING+m.BASELINE_SYMBOL),i={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return m._fonts[e]=i,i}static clearMetrics(e=""){e?delete m._fonts[e]:m._fonts={}}static get _canvas(){if(!m.__canvas){let e;try{const t=new OffscreenCanvas(0,0);if(t.getContext("2d",le)?.measureText)return m.__canvas=t,t;e=E.get().createCanvas()}catch{e=E.get().createCanvas()}e.width=e.height=10,m.__canvas=e}return m.__canvas}static get _context(){return m.__context||(m.__context=m._canvas.getContext("2d",le)),m.__context}};L.METRICS_STRING="|ÉqÅ";L.BASELINE_SYMBOL="M";L.BASELINE_MULTIPLIER=1.4;L.HEIGHT_MULTIPLIER=2;L.graphemeSegmenter=(()=>{if(typeof Intl?.Segmenter=="function"){const a=new Intl.Segmenter;return e=>{const t=a.segment(e),r=[];let i=0;for(const s of t)r[i++]=s.segment;return r}}return a=>[...a]})();L.experimentalLetterSpacing=!1;L._fonts={};L._newlines=[10,13];L._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];let z=L;const Me=["align","breakWords","cssOverrides","fontVariant","fontWeight","leading","letterSpacing","lineHeight","padding","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","fontFamily","fontStyle","fontSize"];function Yt(a){const e=[];let t=0;for(let r=0;r<Me.length;r++){const i=`_${Me[r]}`;e[t++]=a[i]}return t=et(a._fill,e,t),t=jt(a._stroke,e,t),t=$t(a.dropShadow,e,t),t=Xt(a.filters,e,t),e.join("-")}function Xt(a,e,t){if(!a)return t;for(const r of a)e[t++]=r.uid;return t}function et(a,e,t){return a&&(e[t++]=a.color,e[t++]=a.alpha,e[t++]=a.fill?.styleKey),t}function jt(a,e,t){return a&&(t=et(a,e,t),e[t++]=a.width,e[t++]=a.alignment,e[t++]=a.cap,e[t++]=a.join,e[t++]=a.miterLimit),t}function $t(a,e,t){return a&&(e[t++]=a.alpha,e[t++]=a.angle,e[t++]=a.blur,e[t++]=a.distance,e[t++]=D.shared.setValue(a.color).toNumber()),t}const Se=class V extends Ye{constructor(e={}){super(),Nt(e);const t={...V.defaultTextStyle,...e};for(const r in t){const i=r;this[i]=t[r]}this.update()}get align(){return this._align}set align(e){this._align=e,this.update()}get breakWords(){return this._breakWords}set breakWords(e){this._breakWords=e,this.update()}get dropShadow(){return this._dropShadow}set dropShadow(e){e!==null&&typeof e=="object"?this._dropShadow=this._createProxy({...V.defaultDropShadow,...e}):this._dropShadow=e?this._createProxy({...V.defaultDropShadow}):null,this.update()}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily=e,this.update()}get fontSize(){return this._fontSize}set fontSize(e){typeof e=="string"?this._fontSize=parseInt(e,10):this._fontSize=e,this.update()}get fontStyle(){return this._fontStyle}set fontStyle(e){this._fontStyle=e.toLowerCase(),this.update()}get fontVariant(){return this._fontVariant}set fontVariant(e){this._fontVariant=e,this.update()}get fontWeight(){return this._fontWeight}set fontWeight(e){this._fontWeight=e,this.update()}get leading(){return this._leading}set leading(e){this._leading=e,this.update()}get letterSpacing(){return this._letterSpacing}set letterSpacing(e){this._letterSpacing=e,this.update()}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight=e,this.update()}get padding(){return this._padding}set padding(e){this._padding=e,this.update()}get filters(){return this._filters}set filters(e){this._filters=e,this.update()}get trim(){return this._trim}set trim(e){this._trim=e,this.update()}get textBaseline(){return this._textBaseline}set textBaseline(e){this._textBaseline=e,this.update()}get whiteSpace(){return this._whiteSpace}set whiteSpace(e){this._whiteSpace=e,this.update()}get wordWrap(){return this._wordWrap}set wordWrap(e){this._wordWrap=e,this.update()}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(e){this._wordWrapWidth=e,this.update()}get fill(){return this._originalFill}set fill(e){e!==this._originalFill&&(this._originalFill=e,this._isFillStyle(e)&&(this._originalFill=this._createProxy({...H.defaultFillStyle,...e},()=>{this._fill=Fe({...this._originalFill},H.defaultFillStyle)})),this._fill=Fe(e===0?"black":e,H.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(e){e!==this._originalStroke&&(this._originalStroke=e,this._isFillStyle(e)&&(this._originalStroke=this._createProxy({...H.defaultStrokeStyle,...e},()=>{this._stroke=Be({...this._originalStroke},H.defaultStrokeStyle)})),this._stroke=Be(e,H.defaultStrokeStyle),this.update())}_generateKey(){return this._styleKey=Yt(this),this._styleKey}update(){this._styleKey=null,this.emit("update",this)}reset(){const e=V.defaultTextStyle;for(const t in e)this[t]=e[t]}get styleKey(){return this._styleKey||this._generateKey()}clone(){return new V({align:this.align,breakWords:this.breakWords,dropShadow:this._dropShadow?{...this._dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,filters:this._filters?[...this._filters]:void 0})}_getFinalPadding(){let e=0;if(this._filters)for(let t=0;t<this._filters.length;t++)e+=this._filters[t].padding;return Math.max(this._padding,e)}destroy(e=!1){if(this.removeAllListeners(),typeof e=="boolean"?e:e?.texture){const r=typeof e=="boolean"?e:e?.textureSource;this._fill?.texture&&this._fill.texture.destroy(r),this._originalFill?.texture&&this._originalFill.texture.destroy(r),this._stroke?.texture&&this._stroke.texture.destroy(r),this._originalStroke?.texture&&this._originalStroke.texture.destroy(r)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}_createProxy(e,t){return new Proxy(e,{set:(r,i,s)=>(r[i]=s,t?.(i,s),this.update(),!0)})}_isFillStyle(e){return(e??null)!==null&&!(D.isColorLike(e)||e instanceof ee||e instanceof xe)}};Se.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};Se.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let j=Se;function Nt(a){const e=a;if(typeof e.dropShadow=="boolean"&&e.dropShadow){const t=j.defaultDropShadow;a.dropShadow={alpha:e.dropShadowAlpha??t.alpha,angle:e.dropShadowAngle??t.angle,blur:e.dropShadowBlur??t.blur,color:e.dropShadowColor??t.color,distance:e.dropShadowDistance??t.distance}}if(e.strokeThickness!==void 0){k(R,"strokeThickness is now a part of stroke");const t=e.stroke;let r={};if(D.isColorLike(t))r.color=t;else if(t instanceof ee||t instanceof xe)r.fill=t;else if(Object.hasOwnProperty.call(t,"color")||Object.hasOwnProperty.call(t,"fill"))r=t;else throw new Error("Invalid stroke value.");a.stroke={...r,width:e.strokeThickness}}if(Array.isArray(e.fillGradientStops)){if(k(R,"gradient fill is now a fill pattern: `new FillGradient(...)`"),!Array.isArray(e.fill)||e.fill.length===0)throw new Error("Invalid fill value. Expected an array of colors for gradient fill.");e.fill.length!==e.fillGradientStops.length&&K("The number of fill colors must match the number of fill gradient stops.");const t=new ee({start:{x:0,y:0},end:{x:0,y:1},textureSpace:"local"}),r=e.fillGradientStops.slice(),i=e.fill.map(s=>D.shared.setValue(s).toNumber());r.forEach((s,n)=>{t.addColorStop(s,i[n])}),a.fill={fill:t}}}const Re=1e5;function ne(a,e,t,r=0){if(a.texture===M.WHITE&&!a.fill)return D.shared.setValue(a.color).setAlpha(a.alpha??1).toHexa();if(a.fill){if(a.fill instanceof xe){const i=a.fill,s=e.createPattern(i.texture.source.resource,"repeat"),n=i.transform.copyTo(U.shared);return n.scale(i.texture.frame.width,i.texture.frame.height),s.setTransform(n),s}else if(a.fill instanceof ee){const i=a.fill,s=i.type==="linear",n=i.textureSpace==="local";let o=1,l=1;n&&t&&(o=t.width+r,l=t.height+r);let c,u=!1;if(s){const{start:d,end:h}=i;c=e.createLinearGradient(d.x*o,d.y*l,h.x*o,h.y*l),u=Math.abs(h.x-d.x)<Math.abs((h.y-d.y)*.1)}else{const{center:d,innerRadius:h,outerCenter:f,outerRadius:x}=i;c=e.createRadialGradient(d.x*o,d.y*l,h*o,f.x*o,f.y*l,x*o)}if(u&&n&&t){const d=t.lineHeight/l;for(let h=0;h<t.lines.length;h++){const f=(h*t.lineHeight+r/2)/l;i.colorStops.forEach(x=>{const _=f+x.offset*d;c.addColorStop(Math.floor(_*Re)/Re,D.shared.setValue(x.color).toHex())})}}else i.colorStops.forEach(d=>{c.addColorStop(d.offset,D.shared.setValue(d.color).toHex())});return c}}else{const i=e.createPattern(a.texture.source.resource,"repeat"),s=a.matrix.copyTo(U.shared);return s.scale(a.texture.frame.width,a.texture.frame.height),i.setTransform(s),i}return K("FillStyle not recognised",a),"red"}const tt=class rt extends Ht{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentMaxCharHeight=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...rt.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=M.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const s=se(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,t.textureStyle&&(this._textureStyle=t.textureStyle instanceof N?t.textureStyle:new N(t.textureStyle)),this.fontMetrics=z.measureFont(s),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){const t=z.graphemeSegmenter(e).filter(g=>!this._currentChars.includes(g)).filter((g,p,b)=>b.indexOf(g)===p);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:s}=r.canvasAndContext,n=r.texture.source;const o=this._style;let l=this._currentX,c=this._currentY,u=this._currentMaxCharHeight;const d=this.baseRenderedFontSize/this.baseMeasurementFontSize,h=this._padding*d;let f=!1;const x=i.width/this.resolution,_=i.height/this.resolution;for(let g=0;g<t.length;g++){const p=t[g],b=z.measureText(p,o,i,!1);b.lineHeight=b.height;const y=b.width*d,T=Math.ceil((o.fontStyle==="italic"?2:1)*y),v=b.height*d,F=T+h*2,P=v+h*2;if(f=!1,p!==`
`&&p!=="\r"&&p!=="	"&&p!==" "&&(f=!0,u=Math.ceil(Math.max(P,u))),l+F>x&&(c+=u,u=P,l=0,c+u>_)){n.update();const S=this._nextPage();i=S.canvasAndContext.canvas,s=S.canvasAndContext.context,n=S.texture.source,l=0,c=0,u=0}const B=y/d-(o.dropShadow?.distance??0)-(o._stroke?.width??0);if(this.chars[p]={id:p.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:B,kerning:{}},f){this._drawGlyph(s,b,l+h,c+h,d,o);const S=n.width*d,q=n.height*d,oe=new te(l/S*n.width,c/q*n.height,F/S*n.width,P/q*n.height);this.chars[p].texture=new M({source:n,frame:oe}),l+=Math.ceil(F)}}n.update(),this._currentX=l,this._currentY=c,this._currentMaxCharHeight=u,this._skipKerning&&this._applyKerning(t,s)}get pageTextures(){return k(R,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let i=0;i<e.length;i++){const s=e[i];for(let n=0;n<this._currentChars.length;n++){const o=this._currentChars[n];let l=r[s];l||(l=r[s]=t.measureText(s).width);let c=r[o];c||(c=r[o]=t.measureText(o).width);let u=t.measureText(s+o).width,d=u-(l+c);d&&(this.chars[s].kerning[o]=d),u=t.measureText(s+o).width,d=u-(l+c),d&&(this.chars[o].kerning[s]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=X.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new M({source:new Bt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})});this._textureStyle&&(i.source.style=this._textureStyle);const s={canvasAndContext:t,texture:i};return this.pages[this._currentPageIndex]=s,s}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=se(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const i=t._stroke,s=i?.width??0;if(i&&(e.lineWidth=s,e.lineJoin=i.join,e.miterLimit=i.miterLimit,e.strokeStyle=ne(i,e)),t._fill&&(e.fillStyle=ne(t._fill,e)),t.dropShadow){const n=t.dropShadow,o=D.shared.setValue(n.color).toArray(),l=n.blur*r,c=n.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${n.alpha})`,e.shadowBlur=l,e.shadowOffsetX=Math.cos(n.angle)*c,e.shadowOffsetY=Math.sin(n.angle)*c}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,i,s,n){const o=t.text,l=t.fontProperties,u=(n._stroke?.width??0)*s,d=r+u/2,h=i-u/2,f=l.descent*s,x=t.lineHeight*s;let _=!1;n.stroke&&u&&(_=!0,e.strokeText(o,d,h+x-f));const{shadowBlur:g,shadowOffsetX:p,shadowOffsetY:b}=e;n._fill&&(_&&(e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0),e.fillText(o,d,h+x-f)),_&&(e.shadowBlur=g,e.shadowOffsetX=p,e.shadowOffsetY=b)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];X.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};tt.defaultOptions={textureSize:512,style:new j,mipmap:!0};let Ue=tt;function it(a,e,t,r){const i={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=t.baseLineOffset;let s=i.lines[0],n=null,o=!0;const l={width:0,start:0,index:0,positions:[],chars:[]},c=t.baseMeasurementFontSize/e.fontSize,u=e.letterSpacing*c,d=e.wordWrapWidth*c,h=e.lineHeight?e.lineHeight*c:t.lineHeight,f=e.wordWrap&&e.breakWords,x=p=>{const b=s.width;for(let y=0;y<l.index;y++){const T=p.positions[y];s.chars.push(p.chars[y]),s.charPositions.push(T+b)}s.width+=p.width,o=!1,l.width=0,l.index=0,l.chars.length=0},_=()=>{let p=s.chars.length-1;if(r){let b=s.chars[p];for(;b===" ";)s.width-=t.chars[b].xAdvance,b=s.chars[--p]}i.width=Math.max(i.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,i.lines.push(s),i.height+=h},g=p=>p-u>d;for(let p=0;p<a.length+1;p++){let b;const y=p===a.length;y||(b=a[p]);const T=t.chars[b]||t.chars[" "];if(/(?:\s)/.test(b)||b==="\r"||b===`
`||y){if(!o&&e.wordWrap&&g(s.width+l.width)?(_(),x(l),y||s.charPositions.push(0)):(l.start=s.width,x(l),y||s.charPositions.push(0)),b==="\r"||b===`
`)s.width!==0&&_();else if(!y){const B=T.xAdvance+(T.kerning[n]||0)+u;s.width+=B,s.spaceWidth=B,s.spacesIndex.push(s.charPositions.length),s.chars.push(b)}}else{const P=T.kerning[n]||0,B=T.xAdvance+P+u;f&&g(s.width+l.width+B)&&(x(l),_()),l.positions[l.index++]=l.width+P,l.chars.push(b),l.width+=B}n=b}return _(),e.align==="center"?Kt(i):e.align==="right"?qt(i):e.align==="justify"&&Qt(i),i}function Kt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width/2-t.width/2;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function qt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width-t.width;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function Qt(a){const e=a.width;for(let t=0;t<a.lines.length;t++){const r=a.lines[t];let i=0,s=r.spacesIndex[i++],n=0;const o=r.spacesIndex.length,c=(e-r.width)/o;for(let u=0;u<r.charPositions.length;u++)u===s&&(s=r.spacesIndex[i++],n+=c),r.charPositions[u]+=n}}function Jt(a){if(a==="")return[];typeof a=="string"&&(a=[a]);const e=[];for(let t=0,r=a.length;t<r;t++){const i=a[t];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=i[0].charCodeAt(0),n=i[1].charCodeAt(0);if(n<s)throw new Error("[BitmapFont]: Invalid character range.");for(let o=s,l=n;o<=l;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(i))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}let J=0;class Zt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1,textureStyle:null}}getFont(e,t){let r=`${t.fontFamily}-bitmap`,i=!0;if(t._fill.fill&&!t._stroke)r+=t._fill.fill.styleKey,i=!1;else if(t._stroke||t.dropShadow){let n=t.styleKey;n=n.substring(0,n.lastIndexOf("-")),r=`${n}-bitmap`,i=!1}if(!G.has(r)){const n=Object.create(t);n.lineHeight=0;const o=new Ue({style:n,overrideFill:i,overrideSize:!0,...this.defaultOptions});J++,J>50&&K("BitmapText",`You have dynamically created ${J} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),o.once("destroy",()=>{J--,G.remove(r)}),G.set(r,o)}const s=G.get(r);return s.ensureCharacters?.(e),s}getLayout(e,t,r=!0){const i=this.getFont(e,t),s=z.graphemeSegmenter(e);return it(s,t,i,r)}measureText(e,t,r=!0){return this.getLayout(e,t,r)}install(...e){let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:e[2]?.chars,resolution:e[2]?.resolution,padding:e[2]?.padding,skipKerning:e[2]?.skipKerning},k(R,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t?.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const i=t.style,s=i instanceof j?i:new j(i),n=t.dynamicFill??this._canUseTintForStyle(s),o=new Ue({style:s,overrideFill:n,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1,textureStyle:t.textureStyle}),l=Jt(t.chars);return o.ensureCharacters(l.join("")),G.set(`${r}-bitmap`,o),o.once("destroy",()=>G.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=G.get(t);r&&r.destroy()}_canUseTintForStyle(e){return!e._stroke&&(!e.dropShadow||e.dropShadow.color===0)&&!e._fill.fill&&e._fill.color===16777215}}const er=new Zt;class st{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}st.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"filter"};function tr(a,e){e.clear();const t=e.matrix;for(let r=0;r<a.length;r++){const i=a[r];i.globalDisplayStatus<7||(e.matrix=i.worldTransform,e.addBounds(i.bounds))}return e.matrix=t,e}const rr=new _e({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class ir{constructor(){this.skip=!1,this.inputTexture=null,this.backTexture=null,this.filters=null,this.bounds=new je,this.container=null,this.blendRequired=!1,this.outputRenderSurface=null,this.globalFrame={x:0,y:0,width:0,height:0}}}class nt{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new Y({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new Xe({}),this.renderer=e}get activeBackTexture(){return this._activeFilterData?.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters,i=this._pushFilterData();i.skip=!1,i.filters=r,i.container=e.container,i.outputRenderSurface=t.renderTarget.renderSurface;const s=t.renderTarget.renderTarget.colorTexture.source,n=s.resolution,o=s.antialias;if(r.length===0){i.skip=!0;return}const l=i.bounds;if(this._calculateFilterArea(e,l),this._calculateFilterBounds(i,t.renderTarget.rootViewPort,o,n,1),i.skip)return;const c=this._getPreviousFilterData(),u=this._findFilterResolution(n);let d=0,h=0;c&&(d=c.bounds.minX,h=c.bounds.minY),this._calculateGlobalFrame(i,d,h,u,s.width,s.height),this._setupFilterTextures(i,l,t,c)}generateFilteredTexture({texture:e,filters:t}){const r=this._pushFilterData();this._activeFilterData=r,r.skip=!1,r.filters=t;const i=e.source,s=i.resolution,n=i.antialias;if(t.length===0)return r.skip=!0,e;const o=r.bounds;if(o.addRect(e.frame),this._calculateFilterBounds(r,o.rectangle,n,s,0),r.skip)return e;const l=s;this._calculateGlobalFrame(r,0,0,l,i.width,i.height),r.outputRenderSurface=A.getOptimalTexture(o.width,o.height,r.resolution,r.antialias),r.backTexture=M.EMPTY,r.inputTexture=e,this.renderer.renderTarget.finishRenderPass(),this._applyFiltersToTexture(r,!0);const h=r.outputRenderSurface;return h.source.alphaMode="premultiplied-alpha",h}pop(){const e=this.renderer,t=this._popFilterData();t.skip||(e.globalUniforms.pop(),e.renderTarget.finishRenderPass(),this._activeFilterData=t,this._applyFiltersToTexture(t,!1),t.blendRequired&&A.returnTexture(t.backTexture),A.returnTexture(t.inputTexture))}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,s=A.getOptimalTexture(t.width,t.height,i,!1);let n=t.minX,o=t.minY;r&&(n-=r.minX,o-=r.minY),n=Math.floor(n*i),o=Math.floor(o*i);const l=Math.ceil(t.width*i),c=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,s,{x:n,y:o},{width:l,height:c},{x:0,y:0}),s}applyFilter(e,t,r,i){const s=this.renderer,n=this._activeFilterData,l=n.outputRenderSurface===r,c=s.renderTarget.rootRenderTarget.colorTexture.source._resolution,u=this._findFilterResolution(c);let d=0,h=0;if(l){const f=this._findPreviousFilterOffset();d=f.x,h=f.y}this._updateFilterUniforms(t,r,n,d,h,u,l,i),this._setupBindGroupsAndRender(e,t,s)}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),s=t.worldTransform.copyTo(U.shared),n=t.renderGroup||t.parentRenderGroup;return n&&n.cacheToLocalTransform&&s.prepend(n.cacheToLocalTransform),s.invert(),i.prepend(s),i.scale(1/t.texture.orig.width,1/t.texture.orig.height),i.translate(t.anchor.x,t.anchor.y),i}destroy(){}_setupBindGroupsAndRender(e,t,r){if(r.renderPipes.uniformBatch){const i=r.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);this._globalFilterBindGroup.setResource(i,0)}else this._globalFilterBindGroup.setResource(this._filterGlobalUniforms,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,r.encoder.draw({geometry:rr,shader:e,state:e._state,topology:"triangle-list"}),r.type===be.WEBGL&&r.renderTarget.finishRenderPass()}_setupFilterTextures(e,t,r,i){if(e.backTexture=M.EMPTY,e.blendRequired){r.renderTarget.finishRenderPass();const s=r.renderTarget.getRenderTarget(e.outputRenderSurface);e.backTexture=this.getBackTexture(s,t,i?.bounds)}e.inputTexture=A.getOptimalTexture(t.width,t.height,e.resolution,e.antialias),r.renderTarget.bind(e.inputTexture,!0),r.globalUniforms.push({offset:t})}_calculateGlobalFrame(e,t,r,i,s,n){const o=e.globalFrame;o.x=t*i,o.y=r*i,o.width=s*i,o.height=n*i}_updateFilterUniforms(e,t,r,i,s,n,o,l){const c=this._filterGlobalUniforms.uniforms,u=c.uOutputFrame,d=c.uInputSize,h=c.uInputPixel,f=c.uInputClamp,x=c.uGlobalFrame,_=c.uOutputTexture;o?(u[0]=r.bounds.minX-i,u[1]=r.bounds.minY-s):(u[0]=0,u[1]=0),u[2]=e.frame.width,u[3]=e.frame.height,d[0]=e.source.width,d[1]=e.source.height,d[2]=1/d[0],d[3]=1/d[1],h[0]=e.source.pixelWidth,h[1]=e.source.pixelHeight,h[2]=1/h[0],h[3]=1/h[1],f[0]=.5*h[2],f[1]=.5*h[3],f[2]=e.frame.width*d[2]-.5*h[2],f[3]=e.frame.height*d[3]-.5*h[3];const g=this.renderer.renderTarget.rootRenderTarget.colorTexture;x[0]=i*n,x[1]=s*n,x[2]=g.source.width*n,x[3]=g.source.height*n,t instanceof M&&(t.source.resource=null);const p=this.renderer.renderTarget.getRenderTarget(t);this.renderer.renderTarget.bind(t,!!l),t instanceof M?(_[0]=t.frame.width,_[1]=t.frame.height):(_[0]=p.width,_[1]=p.height),_[2]=p.isRoot?-1:1,this._filterGlobalUniforms.update()}_findFilterResolution(e){let t=this._filterStackIndex-1;for(;t>0&&this._filterStack[t].skip;)--t;return t>0&&this._filterStack[t].inputTexture?this._filterStack[t].inputTexture.source._resolution:e}_findPreviousFilterOffset(){let e=0,t=0,r=this._filterStackIndex;for(;r>0;){r--;const i=this._filterStack[r];if(!i.skip){e=i.bounds.minX,t=i.bounds.minY;break}}return{x:e,y:t}}_calculateFilterArea(e,t){if(e.renderables?tr(e.renderables,t):e.filterEffect.filterArea?(t.clear(),t.addRect(e.filterEffect.filterArea),t.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,t),e.container){const i=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;i&&t.applyMatrix(i)}}_applyFiltersToTexture(e,t){const r=e.inputTexture,i=e.bounds,s=e.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(e.backTexture.source,3),s.length===1)s[0].apply(this,r,e.outputRenderSurface,t);else{let n=e.inputTexture;const o=A.getOptimalTexture(i.width,i.height,n.source._resolution,!1);let l=o,c=0;for(c=0;c<s.length-1;++c){s[c].apply(this,n,l,!0);const d=n;n=l,l=d}s[c].apply(this,n,e.outputRenderSurface,t),A.returnTexture(o)}}_calculateFilterBounds(e,t,r,i,s){const n=this.renderer,o=e.bounds,l=e.filters;let c=1/0,u=0,d=!0,h=!1,f=!1,x=!0;for(let _=0;_<l.length;_++){const g=l[_];if(c=Math.min(c,g.resolution==="inherit"?i:g.resolution),u+=g.padding,g.antialias==="off"?d=!1:g.antialias==="inherit"&&d&&(d=r),g.clipToViewport||(x=!1),!!!(g.compatibleRenderers&n.type)){f=!1;break}if(g.blendRequired&&!(n.backBuffer?.useBackBuffer??!0)){K("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),f=!1;break}f=g.enabled||f,h||(h=g.blendRequired)}if(!f){e.skip=!0;return}if(x&&o.fitBounds(0,t.width/i,0,t.height/i),o.scale(c).ceil().scale(1/c).pad((u|0)*s),!o.isPositive){e.skip=!0;return}e.antialias=d,e.resolution=c,e.blendRequired=h}_popFilterData(){return this._filterStackIndex--,this._filterStack[this._filterStackIndex]}_getPreviousFilterData(){let e,t=this._filterStackIndex-1;for(;t>1&&(t--,e=this._filterStack[t],!!e.skip););return e}_pushFilterData(){let e=this._filterStack[this._filterStackIndex];return e||(e=this._filterStack[this._filterStackIndex]=new ir),this._filterStackIndex++,e}}nt.extension={type:[w.WebGLSystem,w.WebGPUSystem],name:"filter"};const at=class ot extends _e{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(k(R,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...ot.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]);let i=t.uvs;i||(t.positions?i=new Float32Array(r.length):i=new Float32Array([0,0,1,0,1,1,0,1]));const s=t.indices||new Uint32Array([0,1,2,0,2,3]),n=t.shrinkBuffersToFit,o=new $({data:r,label:"attribute-mesh-positions",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),l=new $({data:i,label:"attribute-mesh-uvs",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),c=new $({data:s,label:"index-mesh-buffer",shrinkToFit:n,usage:W.INDEX|W.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:c,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};at.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let Te=at,O=null,I=null;function sr(a,e){O||(O=E.get().createCanvas(256,128),I=O.getContext("2d",{willReadFrequently:!0}),I.globalCompositeOperation="copy",I.globalAlpha=1),(O.width<a||O.height<e)&&(O.width=ke(a),O.height=ke(e))}function Ge(a,e,t){for(let r=0,i=4*t*e;r<e;++r,i+=4)if(a[i+3]!==0)return!1;return!0}function Ae(a,e,t,r,i){const s=4*e;for(let n=r,o=r*s+4*t;n<=i;++n,o+=s)if(a[o+3]!==0)return!1;return!0}function nr(...a){let e=a[0];e.canvas||(e={canvas:a[0],resolution:a[1]});const{canvas:t}=e,r=Math.min(e.resolution??1,1),i=e.width??t.width,s=e.height??t.height;let n=e.output;if(sr(i,s),!I)throw new TypeError("Failed to get canvas 2D context");I.drawImage(t,0,0,i,s,0,0,i*r,s*r);const l=I.getImageData(0,0,i,s).data;let c=0,u=0,d=i-1,h=s-1;for(;u<s&&Ge(l,i,u);)++u;if(u===s)return te.EMPTY;for(;Ge(l,i,h);)--h;for(;Ae(l,i,c,u,h);)++c;for(;Ae(l,i,d,u,h);)--d;return++d,++h,I.globalCompositeOperation="source-over",I.strokeRect(c,u,d-c,h-u),I.globalCompositeOperation="copy",n??(n=new te),n.set(c/r,u/r,(d-c)/r,(h-u)/r),n}const We=new te;class ar{getCanvasAndContext(e){const{text:t,style:r,resolution:i=1}=e,s=r._getFinalPadding(),n=z.measureText(t||" ",r),o=Math.ceil(Math.ceil(Math.max(1,n.width)+s*2)*i),l=Math.ceil(Math.ceil(Math.max(1,n.height)+s*2)*i),c=X.getOptimalCanvasAndContext(o,l);this._renderTextToCanvas(t,r,s,i,c);const u=r.trim?nr({canvas:c.canvas,width:o,height:l,resolution:1,output:We}):We.set(0,0,o,l);return{canvasAndContext:c,frame:u}}returnCanvasAndContext(e){X.returnCanvasAndContext(e)}_renderTextToCanvas(e,t,r,i,s){const{canvas:n,context:o}=s,l=se(t),c=z.measureText(e||" ",t),u=c.lines,d=c.lineHeight,h=c.lineWidths,f=c.maxLineWidth,x=c.fontProperties,_=n.height;if(o.resetTransform(),o.scale(i,i),o.textBaseline=t.textBaseline,t._stroke?.width){const y=t._stroke;o.lineWidth=y.width,o.miterLimit=y.miterLimit,o.lineJoin=y.join,o.lineCap=y.cap}o.font=l;let g,p;const b=t.dropShadow?2:1;for(let y=0;y<b;++y){const T=t.dropShadow&&y===0,v=T?Math.ceil(Math.max(1,_)+r*2):0,F=v*i;if(T){o.fillStyle="black",o.strokeStyle="black";const S=t.dropShadow,q=S.color,oe=S.alpha;o.shadowColor=D.shared.setValue(q).setAlpha(oe).toRgbaString();const Pt=S.blur*i,Ce=S.distance*i;o.shadowBlur=Pt,o.shadowOffsetX=Math.cos(S.angle)*Ce,o.shadowOffsetY=Math.sin(S.angle)*Ce+F}else{if(o.fillStyle=t._fill?ne(t._fill,o,c,r*2):null,t._stroke?.width){const S=t._stroke.width*.5+r*2;o.strokeStyle=ne(t._stroke,o,c,S)}o.shadowColor="black"}let P=(d-x.fontSize)/2;d-x.fontSize<0&&(P=0);const B=t._stroke?.width??0;for(let S=0;S<u.length;S++)g=B/2,p=B/2+S*d+x.ascent+P,t.align==="right"?g+=f-h[S]:t.align==="center"&&(g+=(f-h[S])/2),t._stroke?.width&&this._drawLetterSpacing(u[S],t,s,g+r,p+r-v,!0),t._fill!==void 0&&this._drawLetterSpacing(u[S],t,s,g+r,p+r-v)}}_drawLetterSpacing(e,t,r,i,s,n=!1){const{context:o}=r,l=t.letterSpacing;let c=!1;if(z.experimentalLetterSpacingSupported&&(z.experimentalLetterSpacing?(o.letterSpacing=`${l}px`,o.textLetterSpacing=`${l}px`,c=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),l===0||c){n?o.strokeText(e,i,s):o.fillText(e,i,s);return}let u=i;const d=z.graphemeSegmenter(e);let h=o.measureText(e).width,f=0;for(let x=0;x<d.length;++x){const _=d[x];n?o.strokeText(_,u,s):o.fillText(_,u,s);let g="";for(let p=x+1;p<d.length;++p)g+=d[p];f=o.measureText(g).width,u+=h-f+l,h=f}}}const ce=new ar,ze="http://www.w3.org/2000/svg",De="http://www.w3.org/1999/xhtml";class lt{constructor(){this.svgRoot=document.createElementNS(ze,"svg"),this.foreignObject=document.createElementNS(ze,"foreignObject"),this.domElement=document.createElementNS(De,"div"),this.styleElement=document.createElementNS(De,"style");const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i),this.image=E.get().createImage()}}let Le;function or(a,e,t,r){r||(r=Le||(Le=new lt));const{domElement:i,styleElement:s,svgRoot:n}=r;i.innerHTML=`<style>${e.cssStyle};</style><div style='padding:0'>${a}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(s.textContent=t),document.body.appendChild(n);const o=i.getBoundingClientRect();n.remove();const l=e.padding*2;return{width:o.width-l,height:o.height-l}}class lr{constructor(){this.batches=[],this.batched=!1}destroy(){this.batches.forEach(e=>{re.return(e)}),this.batches.length=0}}class ct{constructor(e,t){this.state=ie.for2d(),this.renderer=e,this._adaptor=t,this.renderer.runners.contextChange.add(this)}contextChange(){this._adaptor.contextChange(this.renderer)}validateRenderable(e){const t=e.context,r=!!e._gpuData,i=this.renderer.graphicsContext.updateGpuContext(t);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const r=this._getGpuDataForRenderable(e).batches;for(let i=0;i<r.length;i++){const s=r[i];s._batcher.updateElement(s)}}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=s.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,ae(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=this._getGpuDataForRenderable(e),r=this.renderer.graphicsContext.updateGpuContext(e.context);t.destroy(),r.isBatchable&&this._updateBatchesForRenderable(e,t)}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getGpuDataForRenderable(e).batches;for(let s=0;s<i.length;s++){const n=i[s];r.addToBatch(n,t)}}_getGpuDataForRenderable(e){return e._gpuData[this.renderer.uid]||this._initGpuDataForRenderable(e)}_initGpuDataForRenderable(e){const t=new lr;return e._gpuData[this.renderer.uid]=t,t}_updateBatchesForRenderable(e,t){const r=e.context,i=this.renderer.graphicsContext.getGpuContext(r),s=this.renderer._roundPixels|e._roundPixels;t.batches=i.batches.map(n=>{const o=re.get(kt);return n.copyTo(o),o.renderable=e,o.roundPixels=s,o})}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null}}ct.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"graphics"};const dt=class ut extends Te{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(k(R,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...ut.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],i=[],s=[],n=this.verticesX-1,o=this.verticesY-1,l=this.width/n,c=this.height/o;for(let d=0;d<t;d++){const h=d%this.verticesX,f=d/this.verticesX|0;r.push(h*l,f*c),i.push(h/n,f/o)}const u=n*o;for(let d=0;d<u;d++){const h=d%n,f=d/n|0,x=f*this.verticesX+h,_=f*this.verticesX+h+1,g=(f+1)*this.verticesX+h,p=(f+1)*this.verticesX+h+1;s.push(x,_,g,_,p,g)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};dt.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let cr=dt;class ve{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const t=this.geometry.getBuffer("aUV"),r=t.data;let i=r;const s=this.texture.textureMatrix;return s.isSimple||(i=this._transformedUvs,(this._textureMatrixUpdateId!==s._updateID||this._uvUpdateId!==t._updateID)&&((!i||i.length<r.length)&&(i=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=s._updateID,this._uvUpdateId=t._updateID,s.multiplyUvs(r,i))),i}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Ie{destroy(){}}class ht{constructor(e,t){this.localUniforms=new Y({uTransformMatrix:{value:new U,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new Xe({0:this.localUniforms}),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const s=e._geometry;if(s.indices.length!==t.indexSize||s.positions.length!==t.vertexSize)return t.indexSize=s.indices.length,t.vertexSize=s.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,i=this._getMeshData(e);if(e.didViewUpdate&&(i.indexSize=e._geometry.indices?.length,i.vertexSize=e._geometry.positions?.length),i.batched){const s=this._getBatchableMesh(e);s.setTexture(e._texture),s.geometry=e._geometry,r.addToBatch(s,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._getBatchableMesh(e);t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}execute(e){if(!e.isRenderable)return;e.state.blendMode=ye(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),ae(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new Ie),e._gpuData[this.renderer.uid].meshData||this._initMeshData(e)}_initMeshData(e){return e._gpuData[this.renderer.uid].meshData={batched:e.batched,indexSize:0,vertexSize:0},e._gpuData[this.renderer.uid].meshData}_getBatchableMesh(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new Ie),e._gpuData[this.renderer.uid].batchableMesh||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=new ve;return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,e._gpuData[this.renderer.uid].batchableMesh=t,t}destroy(){this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}ht.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"mesh"};class dr{execute(e,t){const r=e.state,i=e.renderer,s=t.shader||e.defaultShader;s.resources.uTexture=t.texture._source,s.resources.uniforms=e.localUniforms;const n=i.gl,o=e.getBuffers(t);i.shader.bind(s),i.state.set(r),i.geometry.bind(o.geometry,s.glProgram);const c=o.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?n.UNSIGNED_SHORT:n.UNSIGNED_INT;n.drawElements(n.TRIANGLES,t.particleChildren.length*6,c,0)}}class ur{execute(e,t){const r=e.renderer,i=t.shader||e.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(t.texture);const s=e.state,n=e.getBuffers(t);r.encoder.draw({geometry:n.geometry,shader:t.shader||e.defaultShader,state:s,size:t.particleChildren.length*6})}}function Oe(a,e=null){const t=a*6;if(t>65535?e||(e=new Uint32Array(t)):e||(e=new Uint16Array(t)),e.length!==t)throw new Error(`Out buffer length is incorrect, got ${e.length} and expected ${t}`);for(let r=0,i=0;r<t;r+=6,i+=4)e[r+0]=i+0,e[r+1]=i+1,e[r+2]=i+2,e[r+3]=i+0,e[r+4]=i+2,e[r+5]=i+3;return e}function hr(a){return{dynamicUpdate:Ee(a,!0),staticUpdate:Ee(a,!1)}}function Ee(a,e){const t=[];t.push(`

        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const s in a){const n=a[s];if(e!==n.dynamic)continue;t.push(`offset = index + ${r}`),t.push(n.code);const o=ge(n.format);r+=o.stride/4}t.push(`
            index += stride * 4;
        }
    `),t.unshift(`
        var stride = ${r};
    `);const i=t.join(`
`);return new Function("ps","f32v","u32v",i)}class fr{constructor(e){this._size=0,this._generateParticleUpdateCache={};const t=this._size=e.size??1e3,r=e.properties;let i=0,s=0;for(const u in r){const d=r[u],h=ge(d.format);d.dynamic?s+=h.stride:i+=h.stride}this._dynamicStride=s/4,this._staticStride=i/4,this.staticAttributeBuffer=new Q(t*4*i),this.dynamicAttributeBuffer=new Q(t*4*s),this.indexBuffer=Oe(t);const n=new _e;let o=0,l=0;this._staticBuffer=new $({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST}),this._dynamicBuffer=new $({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST});for(const u in r){const d=r[u],h=ge(d.format);d.dynamic?(n.addAttribute(d.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:o*4,format:d.format}),o+=h.size):(n.addAttribute(d.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:l*4,format:d.format}),l+=h.size)}n.addIndex(this.indexBuffer);const c=this.getParticleUpdate(r);this._dynamicUpload=c.dynamicUpdate,this._staticUpload=c.staticUpdate,this.geometry=n}getParticleUpdate(e){const t=pr(e);return this._generateParticleUpdateCache[t]?this._generateParticleUpdateCache[t]:(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e),this._generateParticleUpdateCache[t])}generateParticleUpdate(e){return hr(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,this._size*1.5|0),this.staticAttributeBuffer=new Q(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new Q(this._size*this._dynamicStride*4*4),this.indexBuffer=Oe(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const i=this.staticAttributeBuffer;this._staticUpload(e,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function pr(a){const e=[];for(const t in a){const r=a[t];e.push(t,r.code,r.dynamic?"d":"s")}return e.join("_")}var gr=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,mr=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,He=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class xr extends we{constructor(){const e=Mt.from({vertex:mr,fragment:gr}),t=Rt.from({fragment:{source:He,entryPoint:"mainFragment"},vertex:{source:He,entryPoint:"mainVertex"}});super({glProgram:e,gpuProgram:t,resources:{uTexture:M.WHITE.source,uSampler:new N({}),uniforms:{uTranslationMatrix:{value:new U,type:"mat3x3<f32>"},uColor:{value:new D(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class ft{constructor(e,t){this.state=ie.for2d(),this.localUniforms=new Y({uTranslationMatrix:{value:new U,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new xr,this.state=ie.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return e._gpuData[this.renderer.uid]||this._initBuffer(e)}_initBuffer(e){return e._gpuData[this.renderer.uid]=new fr({size:e.particleChildren.length,properties:e._properties}),e._gpuData[this.renderer.uid]}updateRenderable(e){}execute(e){const t=e.particleChildren;if(t.length===0)return;const r=this.renderer,i=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const s=this.state;i.update(t,e._childrenDirty),e._childrenDirty=!1,s.blendMode=ye(e.blendMode,e.texture._source);const n=this.localUniforms.uniforms,o=n.uTranslationMatrix;e.worldTransform.copyTo(o),o.prepend(r.globalUniforms.globalUniformData.projectionMatrix),n.uResolution=r.globalUniforms.globalUniformData.resolution,n.uRound=r._roundPixels|e._roundPixels,ae(e.groupColorAlpha,n.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class pt extends ft{constructor(e){super(e,new dr)}}pt.extension={type:[w.WebGLPipes],name:"particle"};class gt extends ft{constructor(e){super(e,new ur)}}gt.extension={type:[w.WebGPUPipes],name:"particle"};const mt=class xt extends cr{constructor(e={}){e={...xt.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this._anchorX=e.anchor?.x,this._anchorY=e.anchor?.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:i,_rightWidth:s,_topHeight:n,_bottomHeight:o,_anchorX:l,_anchorY:c}=this,u=i+s,d=t>u?1:t/u,h=n+o,f=r>h?1:r/h,x=Math.min(d,f),_=l*t,g=c*r;e[0]=e[8]=e[16]=e[24]=-_,e[2]=e[10]=e[18]=e[26]=i*x-_,e[4]=e[12]=e[20]=e[28]=t-s*x-_,e[6]=e[14]=e[22]=e[30]=t-_,e[1]=e[3]=e[5]=e[7]=-g,e[9]=e[11]=e[13]=e[15]=n*x-g,e[17]=e[19]=e[21]=e[23]=r-o*x-g,e[25]=e[27]=e[29]=e[31]=r-g,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};mt.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let _r=mt;class br extends ve{constructor(){super(),this.geometry=new _r}destroy(){this.geometry.destroy()}}class _t{constructor(e){this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=e._gpuData[this._renderer.uid]=new br,r=t;return r.renderable=e,r.transform=e.groupTransform,r.texture=e._texture,r.roundPixels=this._renderer._roundPixels|e._roundPixels,e.didViewUpdate||this._updateBatchableSprite(e,r),t}destroy(){this._renderer=null}}_t.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"nineSliceSprite"};const yr={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            }

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},wr={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;

        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);

        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0

        `}};let de,ue;class Sr extends we{constructor(){de??(de=$e({name:"tiling-sprite-shader",bits:[Ot,yr,Ne]})),ue??(ue=Ke({name:"tiling-sprite-shader",bits:[Et,wr,qe]}));const e=new Y({uMapCoord:{value:new U,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new U,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:ue,gpuProgram:de,resources:{localUniforms:new Y({uTransformMatrix:{value:new U,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:M.EMPTY.source,uSampler:M.EMPTY.source.style}})}updateUniforms(e,t,r,i,s,n){const o=this.resources.tilingUniforms,l=n.width,c=n.height,u=n.textureMatrix,d=o.uniforms.uTextureTransform;d.set(r.a*l/e,r.b*l/t,r.c*c/e,r.d*c/t,r.tx/e,r.ty/t),d.invert(),o.uniforms.uMapCoord=u.mapCoord,o.uniforms.uClampFrame=u.uClampFrame,o.uniforms.uClampOffset=u.uClampOffset,o.uniforms.uTextureTransform=d,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=i,o.uniforms.uSizeAnchor[3]=s,n&&(this.resources.uTexture=n.source,this.resources.uSampler=n.source.style)}}class Tr extends Te{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function vr(a,e){const t=a.anchor.x,r=a.anchor.y;e[0]=-t*a.width,e[1]=-r*a.height,e[2]=(1-t)*a.width,e[3]=-r*a.height,e[4]=(1-t)*a.width,e[5]=(1-r)*a.height,e[6]=-t*a.width,e[7]=(1-r)*a.height}function Cr(a,e,t,r){let i=0;const s=a.length/e,n=r.a,o=r.b,l=r.c,c=r.d,u=r.tx,d=r.ty;for(t*=e;i<s;){const h=a[t],f=a[t+1];a[t]=n*h+l*f+u,a[t+1]=o*h+c*f+d,t+=e,i++}}function Pr(a,e){const t=a.texture,r=t.frame.width,i=t.frame.height;let s=0,n=0;a.applyAnchorToTexture&&(s=a.anchor.x,n=a.anchor.y),e[0]=e[6]=-s,e[2]=e[4]=1-s,e[1]=e[3]=-n,e[5]=e[7]=1-n;const o=U.shared;o.copyFrom(a._tileTransform.matrix),o.tx/=a.width,o.ty/=a.height,o.invert(),o.scale(a.width/r,a.height/i),Cr(e,2,0,o)}const Z=new Tr;class Fr{constructor(){this.canBatch=!0,this.geometry=new Te({indices:Z.indices.slice(),positions:Z.positions.slice(),uvs:Z.uvs.slice()})}destroy(){this.geometry.destroy(),this.shader?.destroy()}}class bt{constructor(e){this._state=ie.default2d,this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:s}=t;return!s._batcher.checkAndUpdateTexture(s,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:s,canBatch:n}=i;if(n){i.batchableMesh||(i.batchableMesh=new ve);const o=i.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),o.geometry=s,o.renderable=e,o.transform=e.groupTransform,o.setTexture(e._texture)),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o,t)}else r.break(t),i.shader||(i.shader=new Sr),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._getTilingSpriteData(e);t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,ae(e.groupColorAlpha,r.uColor,0),this._state.blendMode=ye(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:Z,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:i}=t;e.didViewUpdate&&this._updateBatchableMesh(e),i._batcher.updateElement(i)}else if(e.didViewUpdate){const{shader:i}=t;i.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}_getTilingSpriteData(e){return e._gpuData[this._renderer.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new Fr;return t.renderable=e,e._gpuData[this._renderer.uid]=t,t}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),Pr(e,r.uvs),vr(e,r.positions)}destroy(){this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===be.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}bt.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"tilingSprite"};const Br={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:`
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},kr={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:`
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},Mr={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {

                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));

                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;

            }
        `}},Rr={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {

                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));

                // SDF
                median = min(median, msdfColor.a);

                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);

                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);

                return coverage;
            }
        `}};let he,fe;class Ur extends we{constructor(e){const t=new Y({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new U,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}});he??(he=$e({name:"sdf-shader",bits:[Ut,Gt(e),Br,Mr,Ne]})),fe??(fe=Ke({name:"sdf-shader",bits:[At,Wt(e),kr,Rr,qe]})),super({glProgram:fe,gpuProgram:he,resources:{localUniforms:t,batchSamplers:zt(e)}})}}class Gr extends Dt{destroy(){this.context.customShader&&this.context.customShader.destroy(),super.destroy()}}class yt{constructor(e){this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(e){const t=this._getGpuBitmapText(e);return this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Ve(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}updateRenderable(e){const t=this._getGpuBitmapText(e);Ve(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=er.getFont(e.text,e._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=new Ur(this._renderer.limits.maxBatchableTextures)));const s=z.graphemeSegmenter(e.text),n=e._style;let o=i.baseLineOffset;const l=it(s,n,i,!0),c=n.padding,u=l.scale;let d=l.width,h=l.height+l.offsetY;n._stroke&&(d+=n._stroke.width/u,h+=n._stroke.width/u),r.translate(-e._anchor._x*d-c,-e._anchor._y*h-c).scale(u,u);const f=i.applyFillAsTint?n._fill.color:16777215;let x=i.fontMetrics.fontSize,_=i.lineHeight;n.lineHeight&&(x=n.fontSize/u,_=n.lineHeight/u);let g=(_-x)/2;g-i.baseLineOffset<0&&(g=0);for(let p=0;p<l.lines.length;p++){const b=l.lines[p];for(let y=0;y<b.charPositions.length;y++){const T=b.chars[y],v=i.chars[T];if(v?.texture){const F=v.texture;r.texture(F,f||"black",Math.round(b.charPositions[y]+v.xOffset),Math.round(o+v.yOffset+g),F.orig.width,F.orig.height)}}o+=_}}_getGpuBitmapText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Gr;return e._gpuData[this._renderer.uid]=t,this._updateContext(e,t),t}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=G.get(`${r}-bitmap`),{a:s,b:n,c:o,d:l}=e.groupTransform,c=Math.sqrt(s*s+n*n),u=Math.sqrt(o*o+l*l),d=(Math.abs(c)+Math.abs(u))/2,h=i.baseRenderedFontSize/e._style.fontSize,f=d*i.distanceField.range*(1/h);t.customShader.resources.localUniforms.uniforms.uDistance=f}destroy(){this._renderer=null}}yt.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"bitmapText"};function Ve(a,e){e.groupTransform=a.groupTransform,e.groupColorAlpha=a.groupColorAlpha,e.groupColor=a.groupColor,e.groupBlendMode=a.groupBlendMode,e.globalDisplayStatus=a.globalDisplayStatus,e.groupTransform=a.groupTransform,e.localDisplayStatus=a.localDisplayStatus,e.groupAlpha=a.groupAlpha,e._roundPixels=a._roundPixels}class Ar extends Qe{constructor(e){super(),this.generatingTexture=!1,this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){this._renderer.htmlText.returnTexturePromise(this.texturePromise),this.texturePromise=null,this._renderer=null}}function me(a,e){const{texture:t,bounds:r}=a,i=e._style._getFinalPadding();Lt(r,e._anchor,t);const s=e._anchor._x*i*2,n=e._anchor._y*i*2;r.minX-=i-s,r.minY-=i-n,r.maxX-=i-s,r.maxY-=i-n}class wt{constructor(e){this._renderer=e}validateRenderable(e){return e._didTextUpdate}addRenderable(e,t){const r=this._getGpuText(e);e._didTextUpdate&&(this._updateGpuText(e).catch(i=>{console.error(i)}),e._didTextUpdate=!1,me(r,e)),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;t.texturePromise&&(this._renderer.htmlText.returnTexturePromise(t.texturePromise),t.texturePromise=null),t.generatingTexture=!0,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const r=this._renderer.htmlText.getTexturePromise(e);t.texturePromise=r,t.texture=await r;const i=e.renderGroup||e.parentRenderGroup;i&&(i.structureDidChange=!0),t.generatingTexture=!1,me(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Ar(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.texture=M.EMPTY,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}wt.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"htmlText"};function Wr(){const{userAgent:a}=E.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(a)}const zr=new je;function St(a,e,t,r){const i=zr;i.minX=0,i.minY=0,i.maxX=a.width/r|0,i.maxY=a.height/r|0;const s=A.getOptimalTexture(i.width,i.height,r,!1);return s.source.uploadMethodId="image",s.source.resource=a,s.source.alphaMode="premultiply-alpha-on-upload",s.frame.width=e/r,s.frame.height=t/r,s.source.emit("update",s.source),s.updateUvs(),s}function Dr(a,e){const t=e.fontFamily,r=[],i={},s=/font-family:([^;"\s]+)/g,n=a.match(s);function o(l){i[l]||(r.push(l),i[l]=!0)}if(Array.isArray(t))for(let l=0;l<t.length;l++)o(t[l]);else o(t);n&&n.forEach(l=>{const c=l.split(":")[1].trim();o(c)});for(const l in e.tagStyles){const c=e.tagStyles[l].fontFamily;o(c)}return r}async function Lr(a){const t=await(await E.get().fetch(a)).blob(),r=new FileReader;return await new Promise((s,n)=>{r.onloadend=()=>s(r.result),r.onerror=n,r.readAsDataURL(t)})}async function Ir(a,e){const t=await Lr(e);return`@font-face {
        font-family: "${a.fontFamily}";
        font-weight: ${a.fontWeight};
        font-style: ${a.fontStyle};
        src: url('${t}');
    }`}const pe=new Map;async function Or(a){const e=a.filter(t=>G.has(`${t}-and-url`)).map(t=>{if(!pe.has(t)){const{entries:r}=G.get(`${t}-and-url`),i=[];r.forEach(s=>{const n=s.url,l=s.faces.map(c=>({weight:c.weight,style:c.style}));i.push(...l.map(c=>Ir({fontWeight:c.weight,fontStyle:c.style,fontFamily:t},n)))}),pe.set(t,Promise.all(i).then(s=>s.join(`
`)))}return pe.get(t)});return(await Promise.all(e)).join(`
`)}function Er(a,e,t,r,i){const{domElement:s,styleElement:n,svgRoot:o}=i;s.innerHTML=`<style>${e.cssStyle}</style><div style='padding:0;'>${a}</div>`,s.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),n.textContent=r;const{width:l,height:c}=i.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",c.toString()),new XMLSerializer().serializeToString(o)}function Hr(a,e){const t=X.getOptimalCanvasAndContext(a.width,a.height,e),{context:r}=t;return r.clearRect(0,0,a.width,a.height),r.drawImage(a,0,0),t}function Vr(a,e,t){return new Promise(async r=>{t&&await new Promise(i=>setTimeout(i,100)),a.onload=()=>{r()},a.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,a.crossOrigin="anonymous"})}class Tt{constructor(e){this._renderer=e,this._createCanvas=e.type===be.WEBGPU}getTexture(e){return this.getTexturePromise(e)}getTexturePromise(e){return this._buildTexturePromise(e)}async _buildTexturePromise(e){const{text:t,style:r,resolution:i,textureStyle:s}=e,n=re.get(lt),o=Dr(t,r),l=await Or(o),c=or(t,r,l,n),u=Math.ceil(Math.ceil(Math.max(1,c.width)+r.padding*2)*i),d=Math.ceil(Math.ceil(Math.max(1,c.height)+r.padding*2)*i),h=n.image,f=2;h.width=(u|0)+f,h.height=(d|0)+f;const x=Er(t,r,i,l,n);await Vr(h,x,Wr()&&o.length>0);const _=h;let g;this._createCanvas&&(g=Hr(h,i));const p=St(g?g.canvas:_,h.width-f,h.height-f,i);return s&&(p.source.style=s),this._createCanvas&&(this._renderer.texture.initSource(p.source),X.returnCanvasAndContext(g)),re.return(n),p}returnTexturePromise(e){e.then(t=>{this._cleanUp(t)}).catch(()=>{K("HTMLTextSystem: Failed to clean texture")})}_cleanUp(e){A.returnTexture(e,!0),e.source.resource=null,e.source.uploadMethodId="unknown"}destroy(){this._renderer=null}}Tt.extension={type:[w.WebGLSystem,w.WebGPUSystem,w.CanvasSystem],name:"htmlText"};class Yr extends Qe{constructor(e){super(),this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){this._renderer.canvasText.returnTexture(this.texture),this._renderer=null}}class vt{constructor(e){this._renderer=e}validateRenderable(e){return e._didTextUpdate}addRenderable(e,t){const r=this._getGpuText(e);e._didTextUpdate&&(this._updateGpuText(e),e._didTextUpdate=!1),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}_updateGpuText(e){const t=this._getGpuText(e);t.texture&&this._renderer.canvasText.returnTexture(t.texture),e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,t.texture=this._renderer.canvasText.getTexture(e),me(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new Yr(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}vt.extension={type:[w.WebGLPipes,w.WebGPUPipes,w.CanvasPipes],name:"text"};class Ct{constructor(e){this._renderer=e}getTexture(e,t,r,i){typeof e=="string"&&(k("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof j||(e.style=new j(e.style)),e.textureStyle instanceof N||(e.textureStyle=new N(e.textureStyle)),typeof e.text!="string"&&(e.text=e.text.toString());const{text:s,style:n,textureStyle:o}=e,l=e.resolution??this._renderer.resolution,{frame:c,canvasAndContext:u}=ce.getCanvasAndContext({text:s,style:n,resolution:l}),d=St(u.canvas,c.width,c.height,l);if(o&&(d.source.style=o),n.trim&&(c.pad(n.padding),d.frame.copyFrom(c),d.frame.scale(1/l),d.updateUvs()),n.filters){const h=this._applyFilters(d,n.filters);return this.returnTexture(d),ce.returnCanvasAndContext(u),h}return this._renderer.texture.initSource(d._source),ce.returnCanvasAndContext(u),d}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",A.returnTexture(e,!0)}renderTextToCanvas(){k("8.10.0","CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead")}_applyFilters(e,t){const r=this._renderer.renderTarget.renderTarget,i=this._renderer.filter.generateFilteredTexture({texture:e,filters:t});return this._renderer.renderTarget.bind(r,!1),i}destroy(){this._renderer=null}}Ct.extension={type:[w.WebGLSystem,w.WebGPUSystem,w.CanvasSystem],name:"canvasText"};C.add(Je);C.add(Ze);C.add(ct);C.add(It);C.add(ht);C.add(pt);C.add(gt);C.add(Ct);C.add(vt);C.add(yt);C.add(Tt);C.add(wt);C.add(bt);C.add(_t);C.add(nt);C.add(st);
